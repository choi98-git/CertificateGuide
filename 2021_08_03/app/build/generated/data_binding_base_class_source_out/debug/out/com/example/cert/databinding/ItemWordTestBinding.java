// Generated by view binder compiler. Do not edit!
package com.example.cert.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.cert.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWordTestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView expTextView;

  @NonNull
  public final Button gradingBtn;

  @NonNull
  public final Button submissionBtn;

  @NonNull
  public final EditText wordAnswerEdt;

  @NonNull
  public final TextView wordTextView;

  private ItemWordTestBinding(@NonNull ConstraintLayout rootView, @NonNull TextView expTextView,
      @NonNull Button gradingBtn, @NonNull Button submissionBtn, @NonNull EditText wordAnswerEdt,
      @NonNull TextView wordTextView) {
    this.rootView = rootView;
    this.expTextView = expTextView;
    this.gradingBtn = gradingBtn;
    this.submissionBtn = submissionBtn;
    this.wordAnswerEdt = wordAnswerEdt;
    this.wordTextView = wordTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWordTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWordTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_word_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWordTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expTextView;
      TextView expTextView = rootView.findViewById(id);
      if (expTextView == null) {
        break missingId;
      }

      id = R.id.gradingBtn;
      Button gradingBtn = rootView.findViewById(id);
      if (gradingBtn == null) {
        break missingId;
      }

      id = R.id.submissionBtn;
      Button submissionBtn = rootView.findViewById(id);
      if (submissionBtn == null) {
        break missingId;
      }

      id = R.id.wordAnswerEdt;
      EditText wordAnswerEdt = rootView.findViewById(id);
      if (wordAnswerEdt == null) {
        break missingId;
      }

      id = R.id.wordTextView;
      TextView wordTextView = rootView.findViewById(id);
      if (wordTextView == null) {
        break missingId;
      }

      return new ItemWordTestBinding((ConstraintLayout) rootView, expTextView, gradingBtn,
          submissionBtn, wordAnswerEdt, wordTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
